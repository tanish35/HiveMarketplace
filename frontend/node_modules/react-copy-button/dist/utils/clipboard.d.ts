/**
 * Copy text to clipboard.
 *
 * @param  {string} text
 * @returns Promise
 */
export declare function copyTextToClipboard(text: string): Promise<void>;
/**
 * Copy image to clipboard.
 *
 * Chromium browsers require a Blob type when you create a
 * new ClipboardItem e.g. {'<IMAGE MIME TYPE>': Blob},
 * Safari on the other hand requires an unresolved Promise
 * that returns a Blob object e.g. {'<IMAGE MIME TYPE>': Promise<Blob>}.
 *
 * @param  {string} url
 * @param  {HTMLDivElement} element
 * @returns {Promise<void>}
 */
export declare function copyImageToClipboard(content: string | HTMLDivElement): Promise<void>;
/**
 * Copies given text to clipboard. It creates textarea element and sets given text to value, appends the
 * element to HTML document outside the screen to make it invisible and copies the selected text from
 * textarea element. Also it checks for previously selected content. If a selection existed before
 * copying, it unselects everything on the HTML document restores the original selection.
 *
 * @param {string} text
 * @returns {any}
 */
export declare function copyTextLegacy(text: string): any;
/**
 * Copies given image containing element to clipboard.
 * The image element should be wrapped with div.
 *
 * @param {HTMLDivElement} element
 * @returns {boolean}
 */
export declare function copyImageLegacy(element: HTMLDivElement): boolean;
